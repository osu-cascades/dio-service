{"version":3,"sources":["../../models/index.js"],"names":["fs","require","path","Sequelize","basename","__filename","env","process","NODE_ENV","config","__dirname","db","sequelize","use_env_variable","database","username","password","readdirSync","filter","file","indexOf","slice","forEach","model","join","name","Object","keys","modelName","associate","module","exports"],"mappings":"AAAA;;AAEA,IAAMA,KAAYC,QAAQ,IAAR,CAAlB;AACA,IAAMC,OAAYD,QAAQ,MAAR,CAAlB;AACA,IAAME,YAAYF,QAAQ,WAAR,CAAlB;AACA,IAAMG,WAAYF,KAAKE,QAAL,CAAcC,UAAd,CAAlB;AACA,IAAMC,MAAYC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAA1C;AACA,IAAMC,SAAYR,QAAQS,YAAY,wBAApB,EAA8CJ,GAA9C,CAAlB;AACA,IAAMK,KAAY,EAAlB;;AAEA,IAAIC,kBAAJ;;AAEA,IAAIH,OAAOI,gBAAX,EAA6B;AAC3BD,cAAY,IAAIT,SAAJ,CAAcI,QAAQD,GAAR,CAAYG,OAAOI,gBAAnB,CAAd,CAAZ;AACD,CAFD,MAEO;AACLD,cAAY,IAAIT,SAAJ,CAAcM,OAAOK,QAArB,EAA+BL,OAAOM,QAAtC,EAAgDN,OAAOO,QAAvD,EAAiEP,MAAjE,CAAZ;AACD;;AAEDT,GAAGiB,WAAH,CAAeP,SAAf,EAA0BQ,MAA1B,CAAiC,UAACC,IAAD,EAAU;AACvC,SAAQA,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,SAASf,QAAvC,IAAqDe,KAAKE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAA/E;AACD,CAFH,EAGGC,OAHH,CAGW,UAACH,IAAD,EAAU;AACjB,MAAII,QAAQX,UAAU,QAAV,EAAoBV,KAAKsB,IAAL,CAAUd,SAAV,EAAqBS,IAArB,CAApB,CAAZ;AACAR,KAAGY,MAAME,IAAT,IAAiBF,KAAjB;AACD,CANH;;AAQAG,OAAOC,IAAP,CAAYhB,EAAZ,EAAgBW,OAAhB,CAAwB,UAACM,SAAD,EAAe;AACrC,MAAIjB,GAAGiB,SAAH,EAAcC,SAAlB,EAA6B;AAC3BlB,OAAGiB,SAAH,EAAcC,SAAd,CAAwBlB,EAAxB;AACD;AACF,CAJD;;AAMAA,GAAGC,SAAH,GAAeA,SAAf;AACAD,GAAGR,SAAH,GAAeA,SAAf;;AAEA2B,OAAOC,OAAP,GAAiBpB,EAAjB","file":"index.js","sourcesContent":["'use strict';\n\nconst fs        = require('fs');\nconst path      = require('path');\nconst Sequelize = require('sequelize');\nconst basename  = path.basename(__filename);\nconst env       = process.env.NODE_ENV || 'development';\nconst config    = require(__dirname + '/../config/config.json')[env];\nconst db        = {};\n\nlet sequelize;\n\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable]);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs.readdirSync(__dirname).filter((file) => {\n    return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');\n  })\n  .forEach((file) => {\n    let model = sequelize['import'](path.join(__dirname, file));\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach((modelName) => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nmodule.exports = db;\n"]}