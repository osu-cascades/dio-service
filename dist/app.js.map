{"version":3,"sources":["../app.js"],"names":["dotenv","require","config","express","path","bodyParser","app","Sequelize","sequelize","process","env","DB_CONN","api","authenticate","then","console","log","catch","err","error","use","json","urlencoded","extended","static","join","__dirname","set","resolve","listen","PORT","address","port","settings","module","exports"],"mappings":";;AAAA,IAAMA,SAASC,QAAQ,QAAR,EAAkBC,MAAlB,EAAf;AACA,IAAMC,UAAUF,QAAQ,SAAR,CAAhB;AACA,IAAMG,OAAOH,QAAQ,MAAR,CAAb;AACA,IAAMI,aAAaJ,QAAQ,aAAR,CAAnB;AACA,IAAMK,MAAMH,SAAZ;AACA,IAAMI,YAAYN,QAAQ,WAAR,CAAlB;AACA,IAAMO,YAAY,IAAID,SAAJ,CAAcE,QAAQC,GAAR,CAAYC,OAA1B,CAAlB;AACA,IAAMC,MAAMX,QAAQ,iBAAR,CAAZ;;AAEAO,UACKK,YADL,GAEKC,IAFL,CAEU,YAAW;AACjBC,YAAQC,GAAR,CAAY,+CAAZ;AACH,CAJD,EAKCC,KALD,CAKO,UAASC,GAAT,EAAc;AACjBH,YAAQI,KAAR,CAAc,oCAAd,EAAoDD,GAApD;AACH,CAPD;;AASAZ,IAAIc,GAAJ,CAAQf,WAAWgB,IAAX,EAAR;AACAf,IAAIc,GAAJ,CAAQf,WAAWiB,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAjB,IAAIc,GAAJ,CAAQjB,QAAQqB,MAAR,CAAepB,KAAKqB,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AACApB,IAAIc,GAAJ,CAAQ,KAAR,EAAeR,GAAf;AACAN,IAAIqB,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACArB,IAAIqB,GAAJ,CAAQ,OAAR,EAAiBvB,KAAKwB,OAAL,CAAaF,SAAb,EAAwB,OAAxB,CAAjB;;AAEApB,IAAIuB,MAAJ,CAAWpB,QAAQC,GAAR,CAAYoB,IAAZ,IAAoB,IAA/B,EAAqC,YAAY;AAC7Cf,YAAQC,GAAR,CAAY,gDAAZ,EAA8D,KAAKe,OAAL,GAAeC,IAA7E,EAAmF1B,IAAI2B,QAAJ,CAAavB,GAAhG;AACH,CAFD;;AAIAwB,OAAOC,OAAP,GAAiB7B,GAAjB","file":"app.js","sourcesContent":["const dotenv = require('dotenv').config();\nconst express = require('express');\nconst path = require('path');\nconst bodyParser = require('body-parser');\nconst app = express();\nconst Sequelize = require('sequelize');\nconst sequelize = new Sequelize(process.env.DB_CONN);\nconst api = require('./routes/api.js');\n\nsequelize\n    .authenticate()\n    .then(function() {\n    console.log('Connection has been established successfully.');\n})\n.catch(function(err) {\n    console.error('Unable to connect to the database:', err);\n});\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(express.static(path.join(__dirname, 'public')));\napp.use('/v1', api);\napp.set('view engine', 'ejs');\napp.set('views', path.resolve(__dirname, 'views'));\n\napp.listen(process.env.PORT || 3000, function () {\n    console.log(\"Express server listening on port %d in %s mode\", this.address().port, app.settings.env);\n});\n\nmodule.exports = app;"]}